# Error and Auth Types

type InternalServerError {
  message: String!
  status: Int
  details: [String]
}

type JWT {
  accessToken: String!
  refreshToken: String!
}

type TwoFAJWT {
  twoFAToken: String!
}

type TwoFA {
  otpauth: String!
}

type Message {
  data: String!
}

# Union Types

union AuthResult = JWT | TwoFAJWT | InternalServerError
union Response = Message | InternalServerError
union ProfileResponse = Profile | InternalServerError
union TwoFAResponse = TwoFA | InternalServerError

# Core Types

type User {
  id: Int!
  email: String!
  accountType: String!
  isTwoFaEnabled: Boolean!
  isEnabled: Boolean!
}

type Profile {
  id: Int!
  email: String!
  accountType: String!
}

# Input Types

input LoginInput {
  credentials: LoginCredentialsInput
  refreshToken: String
}

input LoginCredentialsInput {
  email: String!
  password: String!
}

input VerifyEmailInput {
  token: String!
}

input RequestPasswordResetInput {
  email: String!
}

input ResetPasswordInput {
  email: String!
  newPassword: String!
  ID: String!
}

input ConfirmTwoFAInput {
  code: String!
}

input VerifyTwoFAInput {
  code: String!
  tempToken: String!
}

# Queries

type Query {
  profile: ProfileResponse!
}

# Mutations

type Mutation {
  login(input: LoginInput!): AuthResult!
  register(input: LoginCredentialsInput!): Response!
  verifyEmail(input: VerifyEmailInput!): AuthResult!
  deleteProfile: ProfileResponse
  requestPasswordReset(input: RequestPasswordResetInput!): Response!
  resetPassword(input: ResetPasswordInput!): Response!
  enableTwoFA: TwoFAResponse!
  confirmTwoFA(input: ConfirmTwoFAInput!): Response!
  verifyTwoFA(input: VerifyTwoFAInput!): AuthResult!
}

